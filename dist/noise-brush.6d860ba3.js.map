{"version":3,"sources":["js/noise-brush.js"],"names":["console","log","width","window","innerWidth","height","innerHeight","bubbles","bubbleSources","noiseBoxes","setup","frameRate","createCanvas","WEBGL","push","NoiseBox","draw","background","noStroke","fill","ellipse","forEach","box","render","mouseMoved","coord","Utils","toGPUCoordinate","mouseX","mouseY","x","y","offsetX","offsetY","i","gridWidth","j","gridHeight","vertFactor","random","rect","Bubble","id","uuidv4","originX","originY","speed","size","color","BubbleSource"],"mappings":";AAgFG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhFHA,QAAQC,IAAI,wBAKZ,IAAIC,EAAQC,OAAOC,WACfC,EAASF,OAAOG,YAChBC,EAAU,GACVC,EAAgB,GAChBC,EAAa,GAEjB,SAASC,IACPR,EAAQC,OAAOC,WACfC,EAASF,OAAOG,YAEhBK,UAAU,IACVC,aAAaV,EAAOG,EAAQQ,OAM5BJ,EAAWK,KAAK,IAAIC,EAAS,IAAK,MAGpC,SAASC,IACPC,WAAW,GACXC,WAEAC,KAAK,EAAG,EAAG,KACXC,QAAQ,IAAK,IAAK,IAAK,KAEvBX,EAAWY,QAAQ,SAAAC,GAAOA,OAAAA,EAAIC,WAGhC,SAASC,IACHC,IAAAA,EAAQC,MAAMC,gBAAgBC,OAAQC,QAC1CpB,EAAWK,KAAK,IAAIC,EAASU,EAAMK,EAAGL,EAAMM,IAGxChB,IAAAA,EAAAA,WACQe,SAAAA,EAAAA,EAAGC,GAAG,EAAA,KAAA,GACXD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EAqCV,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAlCQ,MAAA,WAOH,IANAC,IAAAA,EAAU,KAAKF,EACfG,EAAU,KAAKF,EAKXG,EAAE,EAAGA,EAAKC,EAAmBD,IAC/B,IAAA,IAAIE,EAAE,EAAGA,EAAKC,EAAoBD,IAAK,CACrCE,IAAAA,EAJG,GAIUF,EALJ,IAMbjB,KAAK,IAAK,IAAK,IAAKoB,OAAO,IAAMD,GACjCE,KANO,GAMFN,EAAWF,EANT,GAMkBI,EAAWH,EAN7B,GAAA,SA6BZ,EAxCGlB,GAuBA0B,EACJ,SAAc,IAAA,EAAA,KAAA,GACPC,KAAAA,GAAKC,SACLb,KAAAA,EAAIS,OAAOrC,GAAUA,EAAQ,EAC7B6B,KAAAA,EAAIQ,OAAOlC,GAAUA,EAAS,EAC9BuC,KAAAA,QAAU,KAAKd,EACfe,KAAAA,QAAU,KAAKd,EACfe,KAAAA,MAAQP,OAAO,IAAM,EACrBQ,KAAAA,KAAOR,OAAO,IAAM,GACpBS,KAAAA,MAAQA,MAAMT,OAAO,KAAMA,OAAO,KAAMA,OAAO,KAAM,MAIxDU,EACJ,SAAYnB,EAAAA,EAAGC,GAAG,EAAA,KAAA,GACXD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA","file":"noise-brush.6d860ba3.js","sourceRoot":"..","sourcesContent":["console.log(\"Starting spark-brush\")\n\n// Auto-reload the page\n// setInterval(() => { location.reload() }, 10000)\n\nvar width = window.innerWidth\nvar height = window.innerHeight\nvar bubbles = {}\nvar bubbleSources = []\nvar noiseBoxes = []\n\nfunction setup() {\n  width = window.innerWidth\n  height = window.innerHeight\n\n  frameRate(20)\n  createCanvas(width, height, WEBGL)\n  // noiseBoxes.push(new NoiseBox(100, 100),\n  //                 new NoiseBox(150, 150),\n  //                 new NoiseBox(125, 125),\n  //                 new NoiseBox(105, 105),\n  //                 new NoiseBox(115, 115))\n  noiseBoxes.push(new NoiseBox(100, 100))\n}\n\nfunction draw() {\n  background(0)\n  noStroke()\n\n  fill(0, 0, 255)\n  ellipse(100, 100, 200, 200)\n    // .color(lerpColor(color(255, 255, 255, 1), color(255, 0, 0, 1), 0.5))\n  noiseBoxes.forEach(box => box.render())\n}\n\nfunction mouseMoved() {\n  let coord = Utils.toGPUCoordinate(mouseX, mouseY)\n  noiseBoxes.push(new NoiseBox(coord.x, coord.y))\n}\n\nclass NoiseBox {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  render() {\n    let offsetX = this.x\n    let offsetY = this.y\n    let gridWidth = 100\n    let gridHeight = 100\n    let size = 25\n\n    for(let i=0; i < (gridWidth / size); i++) {\n      for(let j=0; j < (gridHeight / size); j++) {\n        let vertFactor = j * size / gridHeight\n        fill(255, 255, 255, random(25) * vertFactor)\n        rect(i * size + offsetX, j * size + offsetY, size, size)\n      }\n    }\n  }\n}\n\nclass Bubble {\n  constructor() {\n    this.id = uuidv4()\n    this.x = random(width) -  width / 2\n    this.y = random(height) - height / 2\n    this.originX = this.x\n    this.originY = this.y\n    this.speed = random(10) + 1\n    this.size = random(10) + 50\n    this.color = color(random(255), random(255), random(255), 100)\n  }\n}\n\nclass BubbleSource {\n  constructor(x, y) {\n    this.x = x\n    this.y = y\n  }\n}"]}